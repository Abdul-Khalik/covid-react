{"version":3,"sources":["komponen/navbar.js","komponen/carddata.js","komponen/Datanegara.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","marginTop","spacing","Navbar","classes","style","textAlign","href","Typography","variant","className","Summary","useState","data","isLoading","summaryData","setSummaryData","getSummaryData","a","Axios","get","response","console","log","useEffect","dataformat","Intl","NumberFormat","format","confirmed","value","recovered","deaths","Datanegara","props","state","loading","stats","tableRef","React","createRef","this","setState","fetch","then","json","res","catch","error","Fragment","marginLeft","marginRight","columns","field","actions","icon","tooltip","isFreeAction","onClick","current","onQueryChange","options","headerStyle","backgroundColor","color","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f53aaa5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title:{\r\n        flexGrow: 1,\r\n        marginTop: theme.spacing(2),\r\n    }\r\n}));\r\n\r\nexport default function Navbar(){\r\n    const classes = useStyles();\r\n    return(\r\n        <div>\r\n        <button style={{textAlign: 'left'}}><a href='https://abdul-khalik.github.io/'>Kembali</a></button>\r\n        <Typography variant=\"h4\" className={classes.title}>\r\n        Statistik Covid-19\r\n        </Typography>\r\n        </div>\r\n    );\r\n}","/*import React, {useState, useEffect} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nconst useStyles = makeStyles(theme =>({\r\n    root: {\r\n        display: 'flex',\r\n        color: 'white',\r\n        height: '70px',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: theme.spacing(8),\r\n        backgroundColor: '#01579b',\r\n    },\r\n    icon:{\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    card:{\r\n        maxHeight: '200%',\r\n        display: 'block',\r\n        flexDirection: 'column',\r\n        minWidth: '300px',\r\n        marginLeft: '13.5px',\r\n        marginRight: '13.5px',\r\n        float: 'right',\r\n        width: '100px',\r\n        position: 'center',\r\n        borderRadius: '7px',\r\n        justifyContent: 'space-evenly',\r\n        boxSizing: 'border-box',\r\n    },\r\n    cardMedia:{\r\n        paddingTop: '6.25%',\r\n        paddingBottom: '6.25%',\r\n    },\r\n    cardContent:{\r\n        flexGrow:1,\r\n    },\r\n}));\r\n\r\nexport default function Cards(){\r\n    const classes = useStyles();\r\n    const [stats, handleStats] = useState([]);\r\n\r\n    const AmbilData = async () =>{\r\n        const data = await fetch('https://covid19.mathdro.id/api');\r\n        const stats = await data.json()\r\n        console.log(stats)\r\n        handleStats(stats)\r\n    }\r\n\r\n    useEffect(() => {\r\n        AmbilData()\r\n    }, [])\r\n\r\n    const dataformat = new Intl.NumberFormat('en')\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <main>\r\n                <Container className={classes.cardGrid} maxWidth='600px'>\r\n                <br/><br/>\r\n                <Grid container spacing={0} justify='space-evenly'>\r\n                    <Card classname={classes.card} variant='outlined' elevation={3}>\r\n                    <CardContent classname={classes.cardContent}>\r\n                    <CardMedia classname={classes.cardMedia}>\r\n                        <Typography style={{fontSize:25}}>\r\n                            Total Kasus Positif\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Typography style={{fontSize:40}}>\r\n                            {dataformat.format(stats.confirmed.value)}    \r\n                        </Typography> \r\n                    </CardMedia>   \r\n                    </CardContent>  \r\n                    </Card>\r\n                    <Card classname={classes.card} variant='outlined' elevation={3}>\r\n                    <CardContent classname={classes.cardContent}>\r\n                    <CardMedia classname={classes.cardMedia}>\r\n                        <Typography style={{fontSize:25}}>\r\n                            Total Kasus Sembuh\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Typography style={{fontSize:40}}>\r\n                            {dataformat.format(stats.recovered.value)}    \r\n                        </Typography> \r\n                    </CardMedia>   \r\n                    </CardContent>  \r\n                    </Card>\r\n                    <Card classname={classes.card} variant='outlined' elevation={3}>\r\n                    <CardContent classname={classes.cardContent}>\r\n                    <CardMedia classname={classes.cardMedia}>\r\n                        <Typography style={{fontSize:25}}>\r\n                            Total Kasus Meninggal\r\n                        </Typography>\r\n                        <Divider/>\r\n                        <Typography style={{fontSize:40}}>\r\n                            {dataformat.format(stats.deaths.value)}    \r\n                        </Typography> \r\n                    </CardMedia>   \r\n                    </CardContent>  \r\n                    </Card>\r\n                </Grid>\r\n                </Container>\r\n            </main>\r\n        </React.Fragment>\r\n    );\r\n}*/\r\n\r\n\r\nimport React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport moment from 'moment'\r\n\r\nconst Summary = () => {\r\n\tconst [summaryData, setSummaryData] = useState({\r\n\t\tdata: {},\r\n\t\tisLoading: true,\r\n\t})\r\n\r\n\tconst getSummaryData = async () => {\r\n\t\ttry {\r\n\t\t\tsetSummaryData({ ...summaryData, isLoading: true })\r\n\t\t\tconst response = await Axios.get('https://covid19.mathdro.id/api')\r\n\t\t\tsetSummaryData({ data: response.data, isLoading: false })\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.response.data)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetSummaryData()\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n    const dataformat = new Intl.NumberFormat('en')\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-sm-4 my-2'>\r\n\t\t\t\t\t<div className='card-body mx-auto'>\r\n\t\t\t\t\t\t{!summaryData.isLoading && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<h5 className='card-title text-dark text-center'>KASUS POSITIF</h5>\r\n\t\t\t\t\t\t\t\t<h2 className='card-title text-dark text-center'>{dataformat.format(summaryData.data.confirmed.value)}</h2>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-sm-4 my-2'>\r\n\t\t\t\t\t<div className='card-body mx-auto'>\r\n\t\t\t\t\t\t{!summaryData.isLoading && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<h5 className='card-title text-light text-center'>KASUS SEMBUH</h5>\r\n\t\t\t\t\t\t\t\t<h2 className='card-title text-light text-center'>{dataformat.format(summaryData.data.recovered.value)}{' '}</h2>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-sm-4 my-2'>\r\n\t\t\t\t\t<div className='card-body mx-auto'>\r\n\t\t\t\t\t\t{!summaryData.isLoading && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t<h5 className='card-title text-light text-center'>KASUS MENINGGAL</h5>\r\n\t\t\t\t\t\t\t\t<h2 className='card-title text-light text-center'>{dataformat.format(summaryData.data.deaths.value)}{' '}</h2>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Summary","import React from 'react'\r\nimport MaterialTable from 'material-table'\r\n\r\nclass Datanegara extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.tableRef = React.createRef();\r\n\t}\r\n\tstate = {\r\n\t\tloading: false,\r\n\t\tstats: [],\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.setState({loading: true})\r\n\t\tfetch('https://covid19.mathdro.id/api/confirmed')\r\n\t\t.then(response => response.json())\r\n\t\t.then(res => {\r\n\t\t\tthis.setState({ stats: res, loading: false}, () => console.log(res))\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error)\r\n\t\t})\t\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<MaterialTable style={{marginLeft: '10px', marginRight: '10px'}}\r\n\t\t\t\ttitle=\"Data Kasus Covid-19\"\r\n\t\t\t\tcolumns={[\r\n\t\t\t\t\t{title: 'Negara', field: 'countryRegion'},\r\n                    {title: 'Provinsi', field: 'provinceState'},\r\n\t\t\t\t\t{title: 'Total Kasus', field: 'confirmed'},\r\n\t\t\t\t\t{title: 'Total Meninggal', field: 'deaths'},\r\n\t\t\t\t\t{title: 'Total Sembuh', field: 'recovered'},\r\n\t\t\t\t]}\r\n\t\t\t\tdata={this.state.stats}\r\n\t\t\t\tactions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ticon: 'refresh',\r\n\t\t\t\t\t\ttooltip: 'Refresh',\r\n\t\t\t\t\t\tisFreeAction: 'true',\r\n\t\t\t\t\t\tonClick: () => this.tableRef.current && this.tableRef.current.onQueryChange(),\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\toptions={{headerStyle: {\r\n\t\t\t\t\tbackgroundColor: '#3f51b5',\r\n\t\t\t\t\tcolor: '#fff'\r\n\t\t\t\t}}\r\n\t\t\t}\r\n\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Datanegara;","import './App.css';\nimport Navbar from './komponen/navbar';\nimport CardData from './komponen/carddata';\nimport Datanegara from './komponen/Datanegara';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <CardData />\n      <Datanegara />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}